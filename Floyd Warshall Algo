import java.util.*;
public class Graph
{
    static int INF=Integer.MAX_VALUE;
    static void warshall(int[][] adj,int V)
    {
        int[][] dis=new int[V+1][V+1];
        for(int i=0;i<V+1;i++)
        {
            for(int j=0;j<V+1;j++)
            {
                dis[i][j]=adj[i][j];
            }
        }
        for(int k=0;k<V;k++)
        {
            for(int i=0;i<V+1;i++)
            {
                for(int j=0;j<V+1;j++)
                {
                    if(dis[i][k]+dis[k][j]<dis[i][j] && dis[i][k]!=INF && dis[k][j]!=INF)
                      dis[i][j]=dis[i][k]+dis[k][j];
                }
            }
        }
        for(int i=0;i<V+1;i++)
        {
            for(int j=0;j<V+1;j++)
            {
                if(dis[i][j]==INF)
                  System.out.print("INF"+" ");
                else
                  System.out.print(dis[i][j]+" ");
            }
            System.out.println();
        }
    }
    public static void main(String args[])
    {
        int V=3;
        int[][] adj={{0, 5, INF, 10},
                     {INF, 0,   3, INF},
                     {INF, INF, 0,   1},
                     {INF, INF, INF, 0}
                    };
        warshall(adj,V);
        
    }
}

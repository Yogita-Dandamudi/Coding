import java.util.*;
public class Graph
{
    static void addEdge(ArrayList<ArrayList<Integer>> adj,int u,int v)
    {
        adj.get(u).add(v);
        adj.get(v).add(u);
    }
    static void printGraph(ArrayList<ArrayList<Integer>> adj)
    {
        for(int i=0;i<adj.size();i++)
        {
            System.out.print(i+" : ");
            for(int j=0;j<adj.get(i).size();j++)
                System.out.print(adj.get(i).get(j)+"->");
            System.out.println();
        }
    }
    static ArrayList<Integer> bfsOfGraph(int vertex,ArrayList<ArrayList<Integer>> adj,int V)
    {
        Queue<Integer> q=new LinkedList<>();
        int[] vis=new int[V+1];
        Arrays.fill(vis,0);
        q.add(vertex);
        vis[vertex]=1;
        ArrayList<Integer> res=new ArrayList<>();
        while(!q.isEmpty())
        {
            int node=q.poll();
            res.add(node);
            for(int i=0;i<adj.get(node).size();i++)
            {
                int x=adj.get(node).get(i);
                if(vis[x]==0)
                {
                    vis[x]=1;
                    q.add(x);
                }
            }
        }
        return res;
    }
    public static void main(String args[])
    {
        int V=5;
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>(V);
        for(int i=0;i<V+1;i++)
          adj.add(new ArrayList<Integer>());
        addEdge(adj, 1, 2);
        addEdge(adj, 2, 3);
        addEdge(adj, 2, 4);
        addEdge(adj, 3, 5);
        addEdge(adj, 4, 5);
        printGraph(adj);
        System.out.println(bfsOfGraph(1,adj,V));
    }
}

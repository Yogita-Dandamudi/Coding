import java.util.*;
class Node
{
    int data;
    Node left,right;
    Node(int data)
    {
        this.data=data;
        left=null;
        right=null;
    }
}
public class Tree
{
    Node root;
    boolean getPath(Node node,ArrayList<Integer> arr,int target)
    {
        if(node==null)
          return false;
        arr.add(node.data);
        if(node.data==target)
          return true;
        if(getPath(node.left,arr,target) || getPath(node.right,arr,target))
          return true;
        arr.remove(arr.size()-1);
        return false;
    }
    ArrayList<Integer> solve(Node node,int target)
    {
        ArrayList<Integer> arr=new ArrayList<>();
        if(node==null)
          return arr;
        boolean flag=getPath(node,arr,target);
        return arr;
    }
    public static void main(String args[])
    {
        Tree tree=new Tree();
        tree.root=new Node(1);
        tree.root.left=new Node(2);
        tree.root.right=new Node(3);
        tree.root.left.left=new Node(4);
        tree.root.left.right=new Node(5);
        tree.root.left.right.left=new Node(6);
        tree.root.left.right.right=new Node(7);
        System.out.println(tree.solve(tree.root,6));
    }
}

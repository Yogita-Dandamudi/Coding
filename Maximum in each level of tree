import java.util.*;
class Node
{
    int data;
    Node left,right;
    Node(int data)
    {
        this.data=data;
        left=null;
        right=null;
    }
}
public class Tree
{
    Node root;
    void largestValueInEachLevel(Node root)
    {
        if (root == null)
            return;
        Queue<Node> q = new LinkedList<Node>();
        int count, max;
        q.add(root);
        while(!q.isEmpty())
        {
            count = q.size();
            max = Integer.MIN_VALUE;
            while(count > 0)
            {
                Node temp = q.poll();
                if(temp.data>max)
                    max = temp.data;
                if(temp.left != null)
                    q.add(temp.left);
                if(temp.right != null)
                    q.add(temp.right);
                count--;
            }
            System.out.println(max + " ");
        }
    }
    public static void main(String args[])
    {
        Tree tree=new Tree();
        tree.root=new Node(1);
        tree.root.left=new Node(3);
        tree.root.right=new Node(8);
        tree.root.left.left=new Node(5);
        tree.root.right.left=new Node(9);
        tree.root.right.right=new Node(10);
        tree.largestValueInEachLevel(tree.root);
        
    }
}

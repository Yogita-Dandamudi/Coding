import java.util.*;
public class Graph
{
    static void addEdge(ArrayList<ArrayList<Integer>> adj,int u,int v)
    {
        adj.get(u).add(v);
        adj.get(v).add(u);
    }
    static void printGraph(ArrayList<ArrayList<Integer>> adj)
    {
        for(int i=0;i<adj.size();i++)
        {
            System.out.print(i+" : ");
            for(int j=0;j<adj.get(i).size();j++)
                System.out.print(adj.get(i).get(j)+"->");
            System.out.println();
        }
    }
    static int dfs(int vertex,int prev,ArrayList<ArrayList<Integer>> adj,int[] vis)
    {
        vis[vertex]=1;
        for(int i=0;i<adj.get(vertex).size();i++)
        {
            int x=adj.get(vertex).get(i);
            if(vis[x]==0)
            {
                prev=vertex;
                return dfs(x,prev,adj,vis);
            }
            else if(x!=prev)
               return x;
        }
        return -1;
    }
    static int dfsOfGraph(int vertex,ArrayList<ArrayList<Integer>> adj,int[] vis)
    {
        return dfs(vertex,-1,adj,vis);
    }
    public static void main(String args[])
    {
        int V=5;
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>(V);
        for(int i=0;i<V+1;i++)
          adj.add(new ArrayList<Integer>());
        addEdge(adj, 1, 2);
        addEdge(adj, 2, 3);
        addEdge(adj, 2, 4);
        addEdge(adj, 3, 5);
        addEdge(adj, 4, 5);
        printGraph(adj);
        int[] vis=new int[V+1];
        Arrays.fill(vis,0);
        System.out.println("Cycle detected at : "+dfsOfGraph(1,adj,vis));
    }
}
